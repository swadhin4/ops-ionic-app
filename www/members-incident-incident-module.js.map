{"version":3,"sources":["webpack:///./src/app/members/incident/incident.module.ts","webpack:///./src/app/members/incident/incident.page.html","webpack:///./src/app/members/incident/incident.page.scss","webpack:///./src/app/members/incident/incident.page.ts","webpack:///./src/app/services/incident.service.ts"],"names":[],"mappings":"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","file":"members-incident-incident-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { IncidentPage } from './incident.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: IncidentPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [IncidentPage]\n})\nexport class IncidentPageModule  {}\n","module.exports = \"<link href=\\\"assets/dist/font-awesome-4.4.0/css/font-awesome.min.css\\\"rel=\\\"stylesheet\\\">\\n<link href=\\\"assets/css/materialize.min.css\\\" rel=\\\"stylesheet\\\">\\n<link href=\\\"assets/css/style.css\\\" rel=\\\"stylesheet\\\">\\n<style>\\n\\n</style>\\n<ion-header>\\n   <ion-toolbar color=\\\"primary\\\">\\n   \\t\\t<ion-buttons slot=\\\"start\\\">\\n      <ion-back-button></ion-back-button>\\n    </ion-buttons>\\n      <ion-title class=\\\"titleHeader\\\">Incident List</ion-title>\\n   </ion-toolbar>\\n</ion-header>\\n<ion-content >\\n <div class=\\\"row\\\">\\n      <div class=\\\"col s12 m12 l6\\\">\\n         <ul class=\\\"collection mb-0\\\" style=\\\"border: 0px solid #e0e0e0;\\\">\\n               <li class=\\\"collection-item avatar\\\" *ngFor=\\\"let item of incidentList\\\">\\n                  <img src=\\\"assets/img/ticket.png\\\" alt=\\\"\\\" class=\\\"circle\\\">\\n                  <p class=\\\"font-weight-600\\\">{{item.ticketNumber}}</p>\\n                  <p class=\\\"medium-small\\\">{{item.ticketStartTime}}</p>\\n                  <a href=\\\"#!\\\" class=\\\"secondary-content\\\"><i class=\\\"material-icons\\\">star_border</i></a>\\n               </li>\\n            </ul>\\n      </div>\\n   </div>\\n</ion-content>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21lbWJlcnMvaW5jaWRlbnQvaW5jaWRlbnQucGFnZS5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { IncidentService }  from './../../services/incident.service';\nimport { AuthenticationService } from './../../services/authentication.service';\nimport { ToastService }  from './../../services/toast.service';\n@Component({\n  selector: 'app-incident',\n  templateUrl: './incident.page.html',\n  styleUrls: ['./incident.page.scss'],\n})\nexport class IncidentPage implements OnInit {\n\t  responseData:any;\n\t  incidentList:any;\n  constructor(private incidentService:IncidentService,\n\t\t  private authenticationService:AuthenticationService,\n\t\t  private toastService:ToastService) { }\n  \n\t  ngOnInit() {\n\t\t   \t   let accessToken=\"\";\n\t\t\t   this.authenticationService.getUser().then((res)=>{ \n\t\t\t\t   console.log(res);\n\t\t\t\t   this.incidentService.incidentList(res.accessToken,res.username).then((res)=>{\n\t\t\t\t        this.responseData=res;\n\t\t\t\t\t  \tconsole.log(\"Response : \", this.responseData);\n\t\t\t\t\t  \tif(this.responseData.statusCode==200){\n\t\t\t\t\t  \t\tthis.incidentList=this.responseData.object;\n\t\t\t\t\t  \t}\n\t\t\t\t\t  \t//this.toastService.showSuccessToast(\"Incident list displayed\");\n\t\t\t\t    }, (err)=>{\n\t\t\t\t\t\t   console.log(\"Error : \", err)\n\t\t\t\t\t  \t\t//this.toastService.showErrorToast(\"Unable to get incident list\")\n\t\t\t\t\t });\n\t\t\t    }, (err)=>{\n\t\t\t\t   console.log(\"Error : \", err)\n\t\t\t  \t\tthis.toastService.showErrorToast(\"Unable to get user details\")\n\t\t\t  \t});\n\t\t   \n\t  }\n}\n","import { Injectable } from '@angular/core';\nimport { Storage } from '@ionic/storage';\nimport { BehaviorSubject } from 'rxjs';\nimport { Observable, from } from 'rxjs';\nimport { Http, Response } from '@angular/http';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nlet incidentListAPI = \"http://localhost:8484/ops/api/incident/v1/list/extsp\"\n@Injectable({\n  providedIn: 'root'\n})\nexport class IncidentService {\n\n  constructor(private http: Http) { }\n  \n   incidentList(accessToken,username){\n\t   return new Promise((resolve, reject) => {\n\t\t      let headers = new Headers();\n\t      this.http.get(incidentListAPI + \"?access_token=\"+accessToken+\"&user=\"+username)\n\t        .subscribe(res => {\n\t        \t resolve(res.json());\n\t        \t let responseObj =  res.json();\n\t        \t console.log(responseObj);\n\t        }, (err) => {\n\t          reject(err);\n\t        });\n\t    });\n   }\n}\n"],"sourceRoot":""}